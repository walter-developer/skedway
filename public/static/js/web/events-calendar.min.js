import Request from"./../modules/Request.min.js";import Timezone from"./../modules/timezone.min.js";import{URL,EVO_CALENDER}from"./../Constants/Constants.min.js";export default new class EventsCalendar{request;timezone;constructor(){let self=this;this.request=new Request,this.timezone=new Timezone,this.eventsCalendar()}eventsCalendar(){let self=this,events=[],calender={...EVO_CALENDER};self.request.post("/calendar/data").then(http=>{let data;http.collection().forEach(item=>{let start=self.timezone.convertUTCDateToLocalDate(new Date(item.get("start"))),end=self.timezone.convertUTCDateToLocalDate(new Date(item.get("end"))),startCalendar=self.timezone.format(start,"m/d/y"),endCalendar=self.timezone.format(end,"m/d/y"),description="Evento&nbspdia&nbsp"+self.timezone.format(start,"d/m H:i:s")+"&nbspat√©&nbsp"+self.timezone.format(end,"d/m H:i:s")+"<br>";description+=item.get("description"),events.push({id:item.get("id"),name:item.get("title"),date:[startCalendar,endCalendar],description:description,type:"holiday",everyYear:!0,color:"red"})}),calender.calendarEvents=events,$("#evoCalendar").evoCalendar(calender).on("selectEvent",(function(event,activeEvent){return window.location.href=URL+"/events/"+activeEvent.id}))})}};