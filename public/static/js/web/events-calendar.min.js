import Request from"./../modules/Request.min.js";import{EVO_CALENDER}from"./../Constants/Constants.min.js";export default new class EventsCalendar{request;constructor(){let self=this;this.request=new Request,this.eventsCalendar()}convertUTCDateToLocalDate(date){let newDate=new Date(date.getTime()+60*date.getTimezoneOffset()*1e3),offset=date.getTimezoneOffset()/60,hours=date.getHours();return newDate.setHours(hours-offset),newDate}eventsCalendar(){let self=this,events=[],calender={...EVO_CALENDER};self.request.post("/events/data").then(http=>{let data;http.collection().forEach(item=>{let start=self.convertUTCDateToLocalDate(new Date(item.get("start"))),end=self.convertUTCDateToLocalDate(new Date(item.get("end"))),startCalendar=self.format(start,"m/d/y"),endCalendar=self.format(end,"m/d/y"),description="Evento&nbspdia&nbsp"+self.format(start,"d/m H:i:s")+"&nbspat√©&nbsp"+self.format(end,"d/m H:i:s")+"<br>";description+=item.get("description"),events.push({id:item.get("id"),name:item.get("title"),date:[startCalendar,endCalendar],description:description,type:"holiday",everyYear:!0,color:"red"})}),calender.calendarEvents=events,$("#evoCalendar").evoCalendar(calender)})}format(date,format="dd/mm/yy"){let day=date.getDate().toString().padStart(2,"0"),month=(date.getMonth()+1).toString().padStart(2,"0"),year=date.getFullYear().toString().padStart(2,"0"),hours=date.getHours().toString().padStart(2,"0"),minutes=date.getMinutes().toString().padStart(2,"0"),seconds=date.getSeconds().toString().padStart(2,"0"),miliSeconds=date.getMilliseconds().toString().padStart(2,"0");return format=(format=(format=(format=(format=(format=(format=(format=format.toString().toUpperCase().trim()).replace("Y",year)).replace("M",month)).replace("D",day)).replace("H",hours)).replace("I",minutes)).replace("S",seconds)).replace("U",miliSeconds)}};