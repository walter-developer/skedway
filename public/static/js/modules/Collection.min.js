import CollectionFormatter from"./CollectionFormatter.js";export default class Collection{items={};constructor(data={}){let self=this;return this.items=data,this.refresh()}count(attribute=null){let self=this;return this.length(attribute)}isset(attribute=null){let self=this;return this.exists(attribute)}empty(attribute=null){let self=this;return this.isEmpty(attribute)}notEmpty(attribute=null){let self=this;return this.isNotEmpty(attribute)}isNotEmpty(attribute=null){let self=this;return!1===this.isEmpty(attribute)}isNotNull(attribute=null){let self=this;return!1===this.isNull(attribute)}forIn(callback,reverse=!0){let self=this;return this.forEach(callback,reverse)}forInRecurssive(callback,reverse=!0){let self=this;return this.forEachRecurssive(callback,reverse)}forInCollections(callback,reverse=!0){let self=this;return this.forEachInCollections(callback,reverse)}forInCollectionsRecurssive(callback,reverse=!0){let self=this;return this.forEachInCollectionsRecurssive(callback,reverse)}first(attribute=null){let self=this,help=self.help();return help.isObject(self.items,!1)&&help.isNotEmpty(attribute)?help.getFirst(self.get(attribute)):(!help.isNotObject(self.items,!1)||!help.isNotEmpty(attribute))&&help.getFirst(self.items)}length(attribute=null){let self=this,help=self.help();return help.isObject(self.items,!1)&&help.isNotEmpty(attribute)?help.getLength(self.get(attribute)):(!help.isNotObject(self.items,!1)||!help.isNotEmpty(attribute))&&help.getLength(self.items)}isNull(attribute=null){let self=this,help=self.help();return help.isObject(self.items,!1)&&help.isNotEmpty(attribute)?help.isNull(self.get(attribute)):!(!help.isNull(self.items)||!help.isEmpty(attribute))}isEmpty(attribute=null){let self=this,help=self.help();return help.isObject(self.items,!1)&&help.isNotEmpty(attribute)?help.isEmpty(self.get(attribute)):!(!help.isEmpty(self.items)||!help.isEmpty(attribute))}isObject(attribute=null,implict=!0){let self=this,help=self.help();return help.isObject(self.items,!1)&&help.isNotEmpty(attribute)?help.isObject(self.get(attribute),implict):!(!help.isObject(self.items,implict)||!help.isEmpty(attribute))}isArray(attribute=null,implict=!0){let self=this,help=self.help();return help.isObject(self.items,!1)&&help.isNotEmpty(attribute)?help.isArray(self.get(attribute),implict):!(!help.isArray(self.items,implict)||!help.isEmpty(attribute))}isCollection(attribute=null){let self=this,help=self.help();return help.isObject(self.items,!1)&&help.isNotEmpty(attribute)?help.isInstanceOf(self.get(attribute),Collection):!(!help.isInstanceOf(self.get(attribute),Collection)||!help.isEmpty(attribute))}print(){let self=this;console.log(this.items)}console(){let self=this;console.log(this.items,this)}formatter(attribute,recurssive=!0){let self=this,help,keys=this.help().getSplitNotEmpty(attribute),nivel=this.nivel(attribute),lastedArray,lasted=keys.slice(-1).shift();return new CollectionFormatter(nivel,lasted,recurssive)}all(){let self=this,help=this.help(),items=this.items;if(help.isObject(this.items,!1))for(let prop in items){let value=items[prop],isObject=value&&help.isObject(value,!1),isObjecCollection=value&&help.isInstanceOf(value,Collection);items[prop]=isObject&&isObjecCollection?value.all():value}return items}item(attribute=null){let self=this,help=self.help();return help.isObject(self.items,!1)&&help.isNotEmpty(attribute)?help.isAttribute(self.items,firstKey)?self.items[attribute]:null:help.isNotEmpty(self.items,!1)&&help.isNotEmpty(attribute)?self.items:null}toArray(attribute=null,valueDefault=null){let self=this,help=self.help();return help.isNotEmpty(self.items)&&help.isEmpty(attribute)&&help.isEmpty(valueDefault)?(self.items=help.toArray(self.items),self.refresh()):help.isObject(self.items,!1)&&help.isNotEmpty(attribute)&&self.exists(attribute)?(self.set(attribute,help.toArray(self.get(attribute,valueDefault))),self):self}toObject(attribute=null,valueDefault=null){let self=this,help=self.help();return help.isNotEmpty(self.items)&&help.isEmpty(attribute)&&help.isEmpty(valueDefault)&&(self.items=help.toObject(self.items)),help.isObject(self.items,!1)&&help.isNotEmpty(attribute)&&self.exists(attribute)?(self.set(attribute,help.toObject(self.get(attribute,valueDefault))),self):self}copy(attribute=null,source=null,valueDefault=null){let self=this,help=self.help();return help.isObject(self.items,!1)&&help.isNotEmpty(attribute)&&help.isNotEmpty(source)?(self.set(source,self.get(attribute,valueDefault)),self):self}default(attribute=null,valueDefault=null){let self=this,help=self.help();return help.isObject(self.items,!1)&&help.isNotEmpty(attribute)?(self.set(attribute,self.get(attribute,valueDefault)),self):self}sort(attribute=null,order="asc",recurssive=!1){let self=this,help=self.help();return help.isObject(self.items,!1)&&help.isNotEmpty(attribute)?(self.set(attribute,help.sort(self.get(attribute),order,recurssive)),self):help.isObject(self.items,!1)&&help.isEmpty(attribute)&&help.isNotEmpty(order)?(self.items=help.sort(self.items,order,recurssive),self):self}ksort(attribute=null,order="asc",recurssive=!1){let self=this,help=self.help();return help.isObject(self.items,!1)&&help.isNotEmpty(attribute)?(self.set(attribute,help.ksort(self.get(attribute),order,recurssive)),self):help.isObject(self.items,!1)&&help.isEmpty(attribute)&&help.isNotEmpty(order)?(self.items=help.ksort(self.items,order,recurssive),self):self}move(attribute=null,source=null){let self=this,help=self.help();return help.isObject(self.items,!1)&&help.isNotEmpty(attribute)&&help.isNotEmpty(source)&&self.copy(attribute,source).delete(attribute),self}refresh(){let self=this,help=self.help(),items=self.items;if(help.isObject(self.items,!1)){for(let prop in items){let value=items[prop],isObject=value&&help.isObject(value,!1);isObject&&help.isInstanceOf(value,Collection)&&value.refresh(),isObject&&help.isNotInstanceOf(value,Collection)&&(value=new Collection(value)),items[prop]=value}self.items=items}return self}exists(attribute=null){let self=this,help=self.help(),keys=help.getSplitNotEmpty(attribute),firstKey=keys.shift(),firstValue=null,isCollection=!1,isRecurssive=!1;return help.isNotObject(self.items,!1)&&help.isNotEmpty(attribute)?self.items==attribute:!(!help.isObject(self.items,!1)||!help.isAttribute(self.items,firstKey))&&(firstValue=self.items[firstKey],isRecurssive=firstValue&&help.getLength(keys)>0,isCollection=firstValue&&help.isInstanceOf(firstValue,Collection),!isRecurssive||!isCollection||firstValue.exists(keys.join(".")))}get(attribute=null,valueDefault=null){let self=this,help=self.help(),keys=help.getSplitNotEmpty(attribute),firstKey=keys.shift(),firstValue=null,isCollection=!1,isRecurssive=!1;if(help.isNull(attribute)&&help.isNull(valueDefault))return self.items;if(help.isObject(self.items,!1)&&help.isAttribute(self.items,firstKey)){if(firstValue=self.items[firstKey],isRecurssive=firstValue&&help.getLength(keys)>0,isCollection=firstValue&&help.isInstanceOf(firstValue,Collection),isRecurssive&&isCollection)return firstValue.get(keys.join("."),valueDefault);if(help.isNotNull(firstValue))return firstValue}return valueDefault}delete(attribute=null){let self=this,help=self.help(),keys=help.getSplitNotEmpty(attribute),firstKey=keys.shift(),firstValue=null,isCollection=!1,isRecurssive=!1;if(help.isNull(attribute))return self.items=null,self.items;if(help.isObject(self.items,!1)&&help.isAttribute(self.items,firstKey)){if(firstValue=self.items[firstKey],isRecurssive=firstValue&&help.getLength(keys)>0,isCollection=firstValue&&help.isInstanceOf(firstValue,Collection),isRecurssive&&isCollection)return firstValue.delete(keys.join("."));delete self.items[firstKey],self.refresh()}return self}set(attribute=null,value=null){let self=this,help=self.help(),keys=help.getSplitNotEmpty(attribute),firstKey=keys.shift(),firstValue=self.get(firstKey);return help.isInstanceOf(firstValue,Collection)&&help.getLength(keys)>0?self.set(firstKey,firstValue.set(keys.join("."),value)):help.isNotInstanceOf(firstValue,Collection)&&help.getLength(keys)>0?self.set(firstKey,(new Collection).set(keys.join("."),value)):0==help.getLength(firstKey)&&0==help.getLength(keys)?(self.items=value,self):help.getLength(firstKey)&&help.isObject(self.items,!1)&&0==help.getLength(keys)?(self.items[firstKey]=value,self):help.getLength(firstKey)&&help.isNotObject(self.items,!1)&&0==help.getLength(keys)?(self.items={},self.items[firstKey]=value,self):self}nivel(attribute=null){let self=this,help=self.help(),keys=help.getSplitNotEmpty(attribute),firstKey=keys.shift(),firstValue=null,isCollection=!1,isRecurssive=!1;if(help.isNull(attribute)||help.isNotObject(self.items,!1))return self;if(help.isObject(self.items,!1)&&help.isAttribute(self.items,firstKey)){if(firstValue=self.items[firstKey],isRecurssive=firstValue&&help.getLength(keys)>0,isCollection=firstValue&&help.isInstanceOf(firstValue,Collection),isRecurssive&&isCollection)return firstValue.nivel(keys.join("."));if(isCollection&&!isRecurssive)return firstValue}return self}forEach(callback,reverse=!0){let self=this,help=self.help(),newValue=null,items=help.isObject(self.items,!1)?self.items:[self.items];for(let prop in items)newValue=items[prop],newValue=reverse?callback(items[prop],prop,self):callback(prop,items[prop],self),newValue&&help.isInstanceOf(newValue,Collection)&&newValue.refresh(),help.isTypeOf(newValue,"undefined")&&(newValue=items[prop]),newValue=items[prop],items[prop]=newValue;return self.items=items,self}forEachRecurssive(callback,reverse=!0){let self=this,help=self.help(),newValue=null,items=help.isObject(self.items,!1)?self.items:[self.items];for(let prop in items)newValue=reverse?callback(items[prop],prop,self):callback(prop,items[prop],self),newValue&&help.isInstanceOf(newValue,Collection)&&newValue.refresh(),items[prop]&&help.isInstanceOf(items[prop],Collection)&&items[prop].forEachInCollectionsRecurssive(callback,reverse),help.isTypeOf(newValue,"undefined")&&(newValue=items[prop]),items[prop]=newValue;return self.items=items,self}forEachInCollections(callback,reverse=!0){let self=this,help=self.help(),newValue=null,items=help.isObject(self.items,!1)?self.items:[self.items];for(let prop in items)items[prop]&&help.isInstanceOf(items[prop],Collection)&&(newValue=reverse?callback(items[prop],prop,self):callback(prop,items[prop],self),newValue&&help.isInstanceOf(newValue,Collection)&&newValue.refresh(),help.isTypeOf(newValue,"undefined")&&(newValue=items[prop]),items[prop]=newValue);return self.items=items,self}forEachInCollectionsRecurssive(callback,reverse=!0){let self=this,help=self.help(),newValue=null,items=help.isObject(self.items,!1)?self.items:[self.items];for(let prop in items)items[prop]&&help.isInstanceOf(items[prop],Collection)&&(newValue=reverse?callback(items[prop],prop,self):callback(prop,items[prop],self),newValue&&help.isInstanceOf(newValue,Collection)&&newValue.refresh(),items[prop]&&help.isInstanceOf(items[prop],Collection)&&items[prop].forEachInCollectionsRecurssive(callback,reverse),help.isTypeOf(newValue,"undefined")&&(newValue=items[prop]),items[prop]=newValue);return self.items=items,self}help(){let help;return{isNull:function(value){try{return null===value}catch(e){return!1}},isNotNull:function(value){try{return null!==value}catch(e){return!1}},isNotEmpty:function(value=null){try{let self;return!1===this.isEmpty(value)}catch(e){return!1}},isString:function(value=null){try{let self;return this.isTypeOf(value,"string")}catch(e){return!1}},isNotString:function(value=null){try{let self;return!1===this.isTypeOf(value,"string")}catch(e){return!1}},isBoolean:function(value=null){try{let self;return this.isTypeOf(value,"boolean")}catch(e){return!1}},isNumber:function(value=null){try{let self;return this.isTypeOf(value,"number")}catch(e){return!1}},isNotNumber:function(value=null){try{let self;return!1===this.isTypeOf(value,"number")}catch(e){return!1}},isNumeric:function(value=null){try{let self;return!!this.isTypeOf(value,"number")||(isNaN(str)||isNaN(parseFloat(str)),!0)}catch(e){return!1}},isNotNumeric:function(value=null){try{let self;return!1===this.isNumeric(value)}catch(e){return!1}},isInstanceOf:function(value=null,type=null){try{let self;return this.isTypeOf(value,type)}catch(e){return!1}},isNotInstanceOf:function(value=null,type=null){try{let self;return!1===this.isTypeOf(value,type)}catch(e){return!1}},isNotTypeOf:function(value=null,type=null){try{let self;return!1===this.isTypeOf(value,type)}catch(e){return!1}},getFirstJsonDecodeInText:function(value=null){try{let self,jsons=this.getJsonsDecodeInText(value),keys=Object.keys(jsons);return keys.length>0?jsons[keys.shift()]:null}catch(e){return!1}},getJsonsDecodeInText:function(value=null){try{let self,jsons=this.getStringsJsonsInText(value);return jsons.forEach((function(value,index){return jsons[index]=JSON.parse(value)})),jsons}catch(e){return!1}},getFirstStringJsonInText:function(value=null){try{let self,jsons=this.getStringsJsonsInText(value),keys=Object.keys(jsons);return keys.length>0?jsons[keys.shift()]:null}catch(e){return!1}},isEmpty:function(value=null){try{let self;return 0===this.getLength(value)}catch(e){return!1}},isArray:function(value=null,implicit=!0){try{let self=this;return implicit?!0===self.isObject(value,!implicit)&&!1===self.isObject(value,implicit):!0===self.isObject(value,!implicit)}catch(e){return!1}},isNotObject:function(value=null,implicit=!0){try{let self;return!1===this.isObject(value,implicit)}catch(e){return!1}},isNotArray:function(value=null,implicit=!0){try{let self;return!1===this.isArray(value,implicit)}catch(e){return!1}},isAttribute:function(obj={},value=null){try{let self;return this.inIndex(obj,value)}catch(e){return!1}},inAttribute:function(obj={},value=null){try{let self;return this.inIndex(obj,value)}catch(e){return!1}},isIndex:function(obj={},value=null){try{let self;return this.inIndex(obj,value)}catch(e){return!1}},inIndex:function(obj={},value=null){try{let self=this,keysInObject=[];return!!self.isObject(obj,!1)&&(keysInObject=self.getKeys(obj),keysInObject.includes(value))}catch(e){return!1}},inArray:function(obj={},value=null){try{let self;return this.inObject(obj,value)}catch(e){return!1}},inObject:function(obj={},value=null){try{let self=this,vauesInObject=[];return!!self.isObject(obj,!1)&&(vauesInObject=self.getValues(obj),vauesInObject.includes(value))}catch(e){return!1}},isObject:function(value=null,implicit=!0){try{let self=this,isObjectImplict=!1,isObject=value&&self.isTypeOf(value,"object");if(isObject&&implicit){let objectKeys,objectKeysString=Object.keys(value).filter(v=>v&&v.toString().replace(/[0-9]/g,"").length>0);return isObjectImplict=isObject&&objectKeysString.length>0,!0===isObject&&!0===isObjectImplict}return!0===isObject&&!1===isObjectImplict}catch(e){return!1}},getFirst:function(obj={}){try{let self=this;if(obj&&self.isObject(obj,!1)){let keys=self.getKeys(obj),firstKey=keys.length>0?keys[0]:null;return self.isNotEmpty(firstKey)?obj[firstKey]:null}return obj}catch(e){return null}},getKeys:function(obj={}){try{let self=this;return obj&&self.isObject(obj,!1)?Object.keys(obj):[]}catch(e){return[]}},getValues:function(obj={}){try{let self=this;return obj&&self.isObject(obj,!1)?Object.values(obj):[]}catch(e){return[]}},getLength:function(value=null){try{let self=this;return self.isNull(value)?0:self.isBoolean(value)?1:self.isObject(value,!1)?Object.keys(value).length:self.getToString(value).length}catch(e){return 0}},getToString:function(value=null){try{let self=this,empty="";return self.isNull(value)?"".toString():self.isNotObject(value,!1)?value.toString():self.isObject(value,!1)?JSON.stringify(value).toString():empty}catch(e){return""}},getToArray:function(value=null){try{let self;return this.toArray(value)}catch(e){return{}}},getToObject:function(value=null){try{let self;return this.toObject(value)}catch(e){return{}}},getSplit:function(value=null,separator="."){try{let self;return this.getToString(value).split(separator)}catch(e){return[]}},getSplitNotEmpty:function(value=null,separator="."){try{let self=this;return self.getSplit(value,separator).filter(n=>self.getLength(n)>0)}catch(e){return[]}},toObject:function(value=null){try{let self=this,json=null,array=null;if(self.isEmpty(value))return{};if(self.isObject(value))return value;if(self.isArray(value)){for(let prop in value)value[self.getToString(prop)]=value[prop];return value}if(self.isString(value.toString())&&(json=self.getFirstJsonDecodeInText(value),json&&self.isObject(json,!1))){for(let prop in json)json[self.getToString(prop)]=json[prop];return json}if(self.isString(value.toString())&&(array=self.getSplit(value,""),array&&self.isObject(array,!1))){for(let prop in array)array[self.getToString(prop)]=array[prop];return array}return{0:value}}catch(e){return{0:value}}},toArray:function(value=null){try{let self=this,json=null,array=null;return self.isEmpty(value)?[]:self.isArray(value)?value:self.isObject(value)?Object.values(value):self.isString(value.toString())&&(json=self.getFirstJsonDecodeInText(value),json&&self.isObject(json,!1))?Object.values(json):self.isString(value.toString())&&(array=self.getSplit(value,""),array&&self.isObject(array,!1))?Object.values(array):[value]}catch(e){return[value]}},isTypeOf:function(value=null,type=null){try{let typeString=null,typeType=(typeof type).toString().toLocaleLowerCase().trim(),valueType=(typeof value).toString().toLocaleLowerCase().trim();return["object","function","array","class"].includes(typeType)?value instanceof type:null!==value&&"string"===typeType?(typeString=type.toString().toLocaleLowerCase().trim(),[valueType].includes(typeString)):null===value&&"string"===typeType&&(typeString=type.toString().toLocaleLowerCase().trim(),[valueType,"null","undefined","object"].includes(typeString))}catch(e){return!1}},getStringsJsonsInText:function(value=null){try{let self=this,matchs=null,jsons={},regex;const regexMatch=new RegExp("((\\[[^\\}]+)?\\{s*[^\\}\\{]{3,}?:.*\\}([^\\{]+\\])?)","gm");if(self.isEmpty(value))return jsons;if(self.isNotString(value))return jsons;for(;null!==(matchs=regexMatch.exec(value));)matchs.regexMatch===regexMatch.lastIndex&&regexMatch.lastIndex++,matchs.forEach((match,groupIndex)=>{match&&(jsons[groupIndex]=match)});return jsons=Object.values(jsons).filter((function(value,index,self){return self.indexOf(value)===index})),jsons}catch(e){return[]}},ksort:function(value=null,order="asc",recurssive=!1,group=!1){let self=this;if(value&&self.isTypeOf(value,"object")){let newValues={},newValuesObjects={},keys=self.getKeys(value).sort();return"desc"===order.toLocaleLowerCase().trim()&&(keys=keys.reverse()),keys.forEach((function(key){let val=value[key];recurssive&&val&&self.isTypeOf(val,"object")&&(val=self.ksort(val,order,recurssive,group)),!1===group&&(newValues[key]=val),group&&self.isNotTypeOf(val,"object")&&(newValues[key]=val),group&&self.isTypeOf(val,"object")&&(newValuesObjects[key]=val)})),{...newValues,...newValuesObjects}}return value},sort:function(value=null,order="asc",recurssive=!1){let self=this,originalKeys=[],originalValues=[],originalValuesOrder=[],valuesOrdered={};return value&&self.isTypeOf(value,"object")?(originalKeys=self.getKeys(value),originalValues=self.getValues(value),originalValues.forEach((function(originalValue,originalKey){originalValuesOrder.push({index:originalKey,value:originalValue})})),originalValuesOrder.sort((function(itemA,itemB){let valueA=self.isString(itemA.value)?self.getToString(itemA.value).toLocaleLowerCase():itemA.value,valueB=self.isString(itemB.value)?self.getToString(itemB.value).toLocaleLowerCase():itemB.value;return valueA>valueB?1:valueA<valueB?-1:0})),"desc"===order.toLocaleLowerCase().trim()&&(originalValuesOrder=originalValuesOrder.reverse()),originalValuesOrder.forEach((function(item){item.value&&self.isTypeOf(item.value,"object")&&recurssive&&(item.value=self.sort(item.value,order,recurssive)),valuesOrdered[originalKeys[item.index]]=item.value})),valuesOrdered):value}}}}