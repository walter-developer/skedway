export default class CollectionFormatter{recurssive=!1;attribute=null;collection=null;mask={mask_cep:"#####-###",mask_rg:"##.###.###-#",mask_cpf:"###.###.###-##",mask_cnpj:"##.###.###/####-##",mask_celular:"#####-####",mask_telefone:"####-####",mask_ddd_celular:"(##)#####-####",mask_ddd_telefone:"(##)####-####"};constructor(collection,attribute,recurssive){let self=this;this.attribute=attribute,this.recurssive=recurssive,this.collection=collection}attr(){let self=this;return this.attribute}exists(){let self=this;return this.collection.exists(this.attribute)}collect(){let self=this;return this.collection}value(){let self=this;return this.collection.get(this.attribute)}date(format="d/m/y"){let self=this;return this.timestamp(format)}numeric(){let self=this,help=this.help(),value=this.value(),exists=this.exists(),attribute=this.attr(),collection=this.collect();return exists&&value&&collection.set(attribute,help.onlyNumbers(value)),this.callRecurssive(this.numeric.name)}integer(){let self=this,help=this.help(),value=this.value(),exists=this.exists(),attribute=this.attr(),collection=this.collect(),newValue=value;return exists&&value&&(newValue=help.onlyNumbers(value),newValue=help.isNumeric(newValue)?parseInt(newValue):newValue,collection.set(attribute,newValue)),this.callRecurssive(this.integer.name)}float(decimal=2){let self=this,help=this.help(),value=this.value(),exists=this.exists(),attribute=this.attr(),collection=this.collect(),newValue=value;return exists&&value&&(newValue=help.toFloat(value),newValue=parseFloat(newValue).toFixed(decimal),collection.set(attribute,newValue)),this.callRecurssive(this.float.name,decimal)}floatString(decimal=2){let self=this,help=this.help(),value=this.value(),exists=this.exists(),attribute=this.attr(),collection=this.collect(),newValue=value;return exists&&value&&(newValue=help.toFloat(value),newValue=help.getToString(newValue.toFixed(decimal)),collection.set(attribute,newValue)),this.callRecurssive(this.floatString.name,decimal)}real(decimal=2){let self=this,help=this.help(),value=this.value(),exists=this.exists(),attribute=this.attr(),collection=this.collect(),newValue=value;return exists&&value&&(newValue=help.floatToMoneyBrasil(value,decimal),collection.set(attribute,newValue)),this.callRecurssive(this.real.name,decimal)}array(){let self=this,help=this.help(),value=this.value(),exists=this.exists(),attribute=this.attr(),collection=this.collect(),newValue=value;return exists&&value&&(newValue=help.toArray(value,decimal),collection.set(attribute,newValue)),this.callRecurssive(this.array.name)}boolean(){let self=this,value=this.value(),exists=this.exists(),attribute=this.attr(),collection=this.collect();return exists&&value&&collection.set(attribute,["S","1",1,!0].includes(value)),this.callRecurssive(this.boolean.name)}rg(){let self=this,help=self.help(),value=self.value(),exists=self.exists(),attribute=self.attr(),collection=self.collect();return exists&&value&&(value=help.onlyNumbers(value),value=help.format(self.mask.mask_rg,value),collection.set(attribute,value)),self.callRecurssive(self.rg.name)}cpf(){let self=this,help=self.help(),value=self.value(),exists=self.exists(),attribute=self.attr(),collection=self.collect();if(exists&&value){if(value=help.onlyNumbers(value),11===help.getLength(value))return value=help.format(self.mask.mask_cpf,value),collection.set(attribute,value),self.callRecurssive(self.cpf.name);if(14===help.getLength(value))return value=help.format(self.mask.mask_cnpj,value),collection.set(attribute,value),self.callRecurssive(self.cpf.name);collection.set(attribute,value)}return self.callRecurssive(self.cpf.name)}cnpj(){let self=this,help=self.help(),value=self.value(),exists=self.exists(),attribute=self.attr(),collection=self.collect();if(exists&&value){if(value=help.onlyNumbers(value),11===help.getLength(value))return value=help.format(self.mask.mask_cpf,value),collection.set(attribute,value),self.callRecurssive(self.cnpj.name);if(14===help.getLength(value))return value=help.format(self.mask.mask_cnpj,value),collection.set(attribute,value),self.callRecurssive(self.cnpj.name)}return self.callRecurssive(self.cnpj.name)}telefone(){let self=this,help=self.help(),value=self.value(),exists=self.exists(),attribute=self.attr(),collection=self.collect();if(exists&&value){if(value=help.onlyNumbers(value),11===help.getLength(value))return value=help.format(self.mask.mask_ddd_celular,value),collection.set(attribute,value),self.callRecurssive(self.telefone.name);if(10===help.getLength(value))return value=help.format(self.mask.mask_ddd_telefone,value),collection.set(attribute,value),self.callRecurssive(self.telefone.name);if(9===help.getLength(value))return value=help.format(self.mask.mask_celular,value),collection.set(attribute,value),self.callRecurssive(self.telefone.name);if(8===help.getLength(value))return value=help.format(self.mask.mask_telefone,value),collection.set(attribute,value),self.callRecurssive(self.telefone.name)}return self.callRecurssive(self.telefone.name)}celular(){let self=this,help=self.help(),value=self.value(),exists=self.exists(),attribute=self.attr(),collection=self.collect();if(exists&&value){if(value=help.onlyNumbers(value),11===help.getLength(value))return value=help.format(self.mask.mask_ddd_celular,value),collection.set(attribute,value),self.callRecurssive(self.celular.name);if(10===help.getLength(value))return value=help.format(self.mask.mask_ddd_telefone,value),collection.set(attribute,value),self.callRecurssive(self.celular.name);if(9===help.getLength(value))return value=help.format(self.mask.mask_celular,value),collection.set(attribute,value),self.callRecurssive(self.celular.name);if(8===help.getLength(value))return value=help.format(self.mask.mask_telefone,value),collection.set(attribute,value),self.callRecurssive(self.celular.name)}return self.callRecurssive(self.celular.name)}cep(){let self=this,help=self.help(),value=self.value(),exists=self.exists(),attribute=self.attr(),collection=self.collect();return exists&&value&&(value=help.onlyNumbers(value),8===help.getLength(value))?(value=help.format(self.mask.mask_cep,value),collection.set(attribute,value),self.callRecurssive(self.cep.name)):self.callRecurssive(self.cep.name)}timestamp(format="d/m/y h:i:s"){let self=this,help=this.help(),value=this.value(),exists=this.exists(),attribute=this.attr(),collection=this.collect(),formats={"dd-mm-yyyy":/^(\d{1,2})\/(\d{1,2})\/(\d{4})$/,"yyyy-mm-dd":/^(\d{4})\/(\d{1,2})\/(\d{1,2})$/,"dd-mm-yyyy_hh":/^(\d{1,2})\-(\d{1,2})\-(\d{4})\s(\d{1,2})$/,"yyyy-mm-dd_hh":/^(\d{4})\-(\d{1,2})\-(\d{1,2})\s(\d{1,2})$/,"dd-mm-yyyy_hh:mm":/^(\d{1,2})\-(\d{1,2})\-(\d{4})\s(\d{1,2})\:(\d{1,2})$/,"yyyy-mm-dd_hh:mm":/^(\d{4})\-(\d{1,2})\-(\d{1,2})\s(\d{1,2})\:(\d{1,2})$/,"dd-mm-yyyy_hh:mm:ss":/^(\d{1,2})\-(\d{1,2})\-(\d{4})\s(\d{1,2})\:(\d{1,2})\:(\d{1,2})$/,"yyyy-mm-dd_hh:mm:ss":/^(\d{4})\-(\d{1,2})\-(\d{1,2})\s(\d{1,2})\:(\d{1,2})\:(\d{1,2})$/};if(exists&&value&&help.isString(value)&&formats&&help.isString(format)){let names=[],match=[],assoc={};for(let prop in formats)if(names=prop.split(/-|\/|\\|\:|\s|\.|\_/),match=value.replace(/[\\\/]/g,"-").match(formats[prop]),names&&match){names=names.filter((v,i)=>"number"==typeof i&&v.match(/[^0-9]/g)),match=match.filter((v,i)=>"number"==typeof i&&!v.match(/[^0-9]/g));break}if(names&&match&&names.length===match.length)for(let index in names)assoc[names[index]]=match[index];if(assoc&&Object.keys(assoc).length>0){let keys=Object.keys(assoc),year=keys.includes("yyyy")?assoc.yyyy:"1800",month=keys.includes("mm")?assoc.mm:"00",day=keys.includes("dd")?assoc.dd:"01",hours=keys.includes("hh")?assoc.hh:"00",minutes=keys.includes("mm")?assoc.mm:"00",seconds=keys.includes("ss")?assoc.ss:"00",miliSeconds=keys.includes("uu")?assoc.uu:"00",date=new Date(year,month-1,day,hours,minutes,seconds,miliSeconds);year=date.getFullYear(),hours=date.getHours().toString().padStart(2,"0"),minutes=date.getMinutes().toString().padStart(2,"0"),seconds=date.getSeconds().toString().padStart(2,"0"),miliSeconds=date.getMilliseconds().toString().padStart(2,"0"),month=(date.getMonth()+1).toString().padStart(2,"0"),day=date.getDate().toString().padStart(2,"0"),format=(format=(format=(format=(format=(format=(format=(format=format.toString().toUpperCase().trim()).replace("Y",year)).replace("M",month)).replace("D",day)).replace("H",hours)).replace("I",minutes)).replace("S",seconds)).replace("U",miliSeconds),collection.set(attribute,format)}}return this.callRecurssive(this.timestamp.name,format)}callRecurssive(method,...args){let self=this,recursive=this.recurssive,collection=this.collect(),attribute=this.attr();return recursive&&collection&&attribute&&collection.forInCollections((function(collect){let formatter=collect.formatter(attribute,recursive);formatter[method].apply(formatter,args)})),this}help(){let help;return{isNull:function(value){try{return null===value}catch(e){return!1}},isNotNull:function(value){try{return null!==value}catch(e){return!1}},isNotEmpty:function(value=null){try{let self;return!1===this.isEmpty(value)}catch(e){return!1}},isString:function(value=null){try{let self;return this.isTypeOf(value,"string")}catch(e){return!1}},isNotString:function(value=null){try{let self;return!1===this.isTypeOf(value,"string")}catch(e){return!1}},isBoolean:function(value=null){try{let self;return this.isTypeOf(value,"boolean")}catch(e){return!1}},isNumber:function(value=null){try{let self;return this.isTypeOf(value,"number")}catch(e){return!1}},isNotNumber:function(value=null){try{let self;return!1===this.isTypeOf(value,"number")}catch(e){return!1}},isNumeric:function(value=null){try{let self;return!!this.isTypeOf(value,"number")||(isNaN(str)||isNaN(parseFloat(str)),!0)}catch(e){return!1}},isNotNumeric:function(value=null){try{let self;return!1===this.isNumeric(value)}catch(e){return!1}},isInstanceOf:function(value=null,type=null){try{let self;return this.isTypeOf(value,type)}catch(e){return!1}},isNotInstanceOf:function(value=null,type=null){try{let self;return!1===this.isTypeOf(value,type)}catch(e){return!1}},isNotTypeOf:function(value=null,type=null){try{let self;return!1===this.isTypeOf(value,type)}catch(e){return!1}},getFirstJsonDecodeInText:function(value=null){try{let self,jsons=this.getJsonsDecodeInText(value),keys=Object.keys(jsons);return keys.length>0?jsons[keys.shift()]:null}catch(e){return!1}},getJsonsDecodeInText:function(value=null){try{let self,jsons=this.getStringsJsonsInText(value);return jsons.forEach((function(value,index){return jsons[index]=JSON.parse(value)})),jsons}catch(e){return!1}},getFirstStringJsonInText:function(value=null){try{let self,jsons=this.getStringsJsonsInText(value),keys=Object.keys(jsons);return keys.length>0?jsons[keys.shift()]:null}catch(e){return!1}},isEmpty:function(value=null){try{let self;return 0===this.getLength(value)}catch(e){return!1}},isArray:function(value=null,implicit=!0){try{let self=this;return implicit?!0===self.isObject(value,!implicit)&&!1===self.isObject(value,implicit):!0===self.isObject(value,!implicit)}catch(e){return!1}},isNotObject:function(value=null,implicit=!0){try{let self;return!1===this.isObject(value,implicit)}catch(e){return!1}},isNotArray:function(value=null,implicit=!0){try{let self;return!1===this.isArray(value,implicit)}catch(e){return!1}},isAttribute:function(obj={},value=null){try{let self;return this.inIndex(obj,value)}catch(e){return!1}},inAttribute:function(obj={},value=null){try{let self;return this.inIndex(obj,value)}catch(e){return!1}},isIndex:function(obj={},value=null){try{let self;return this.inIndex(obj,value)}catch(e){return!1}},inIndex:function(obj={},value=null){try{let self=this,keysInObject=[];return!!self.isObject(obj,!1)&&(keysInObject=self.getKeys(obj),keysInObject.includes(value))}catch(e){return!1}},inArray:function(obj={},value=null){try{let self;return this.inObject(obj,value)}catch(e){return!1}},inObject:function(obj={},value=null){try{let self=this,vauesInObject=[];return!!self.isObject(obj,!1)&&(vauesInObject=self.getValues(obj),vauesInObject.includes(value))}catch(e){return!1}},isObject:function(value=null,implicit=!0){try{let self=this,isObjectImplict=!1,isObject=value&&self.isTypeOf(value,"object");if(isObject&&implicit){let objectKeys,objectKeysString=Object.keys(value).filter(v=>v&&v.toString().replace(/[0-9]/g,"").length>0);return isObjectImplict=isObject&&objectKeysString.length>0,!0===isObject&&!0===isObjectImplict}return!0===isObject&&!1===isObjectImplict}catch(e){return!1}},getFirst:function(obj={}){try{let self=this;if(obj&&self.isObject(obj,!1)){let keys=self.getKeys(obj),firstKey=keys.length>0?keys[0]:null;return self.isNotEmpty(firstKey)?obj[firstKey]:null}return obj}catch(e){return null}},getKeys:function(obj={}){try{let self=this;return obj&&self.isObject(obj,!1)?Object.keys(obj):[]}catch(e){return[]}},getValues:function(obj={}){try{let self=this;return obj&&self.isObject(obj,!1)?Object.values(obj):[]}catch(e){return[]}},getLength:function(value=null){try{let self=this;return self.isNull(value)?0:self.isBoolean(value)?1:self.isObject(value,!1)?Object.keys(value).length:self.getToString(value).length}catch(e){return 0}},getToString:function(value=null){try{let self=this,empty="";return self.isNull(value)?"".toString():self.isNotObject(value,!1)?value.toString():self.isObject(value,!1)?JSON.stringify(value).toString():empty}catch(e){return""}},getToArray:function(value=null){try{let self;return this.toArray(value)}catch(e){return{}}},getToObject:function(value=null){try{let self;return this.toObject(value)}catch(e){return{}}},getSplit:function(value=null,separator="."){try{let self;return this.getToString(value).split(separator)}catch(e){return[]}},getSplitNotEmpty:function(value=null,separator="."){try{let self=this;return self.getSplit(value,separator).filter(n=>self.getLength(n)>0)}catch(e){return[]}},toObject:function(value=null){try{let self=this,json=null,array=null;if(self.isEmpty(value))return{};if(self.isObject(value))return value;if(self.isArray(value)){for(let prop in value)value[self.getToString(prop)]=value[prop];return value}if(self.isString(value.toString())&&(json=self.getFirstJsonDecodeInText(value),json&&self.isObject(json,!1))){for(let prop in json)json[self.getToString(prop)]=json[prop];return json}if(self.isString(value.toString())&&(array=self.getSplit(value,""),array&&self.isObject(array,!1))){for(let prop in array)array[self.getToString(prop)]=array[prop];return array}return{0:value}}catch(e){return{0:value}}},toArray:function(value=null){try{let self=this,json=null,array=null;return self.isEmpty(value)?[]:self.isArray(value)?value:self.isObject(value)?Object.values(value):self.isString(value.toString())&&(json=self.getFirstJsonDecodeInText(value),json&&self.isObject(json,!1))?Object.values(json):self.isString(value.toString())&&(array=self.getSplit(value,""),array&&self.isObject(array,!1))?Object.values(array):[value]}catch(e){return[value]}},isTypeOf:function(value=null,type=null){try{let typeString=null,typeType=(typeof type).toString().toLocaleLowerCase().trim(),valueType=(typeof value).toString().toLocaleLowerCase().trim();return["object","function","array","class"].includes(typeType)?value instanceof type:null!==value&&"string"===typeType?(typeString=type.toString().toLocaleLowerCase().trim(),[valueType].includes(typeString)):null===value&&"string"===typeType&&(typeString=type.toString().toLocaleLowerCase().trim(),[valueType,"null","undefined","object"].includes(typeString))}catch(e){return!1}},getStringsJsonsInText:function(value=null){try{let self=this,matchs=null,jsons={},regex;const regexMatch=new RegExp("((\\[[^\\}]+)?\\{s*[^\\}\\{]{3,}?:.*\\}([^\\{]+\\])?)","gm");if(self.isEmpty(value))return jsons;if(self.isNotString(value))return jsons;for(;null!==(matchs=regexMatch.exec(value));)matchs.regexMatch===regexMatch.lastIndex&&regexMatch.lastIndex++,matchs.forEach((match,groupIndex)=>{match&&(jsons[groupIndex]=match)});return jsons=Object.values(jsons).filter((function(value,index,self){return self.indexOf(value)===index})),jsons}catch(e){return[]}},ksort:function(value=null,order="asc",recurssive=!1,group=!1){let self=this;if(value&&self.isTypeOf(value,"object")){let newValues={},newValuesObjects={},keys=self.getKeys(value).sort();return"desc"===order.toLocaleLowerCase().trim()&&(keys=keys.reverse()),keys.forEach((function(key){let val=value[key];recurssive&&val&&self.isTypeOf(val,"object")&&(val=self.ksort(val,order,recurssive,group)),!1===group&&(newValues[key]=val),group&&self.isNotTypeOf(val,"object")&&(newValues[key]=val),group&&self.isTypeOf(val,"object")&&(newValuesObjects[key]=val)})),{...newValues,...newValuesObjects}}return value},sort:function(value=null,order="asc",recurssive=!1){let self=this,originalKeys=[],originalValues=[],originalValuesOrder=[],valuesOrdered={};return value&&self.isTypeOf(value,"object")?(originalKeys=self.getKeys(value),originalValues=self.getValues(value),originalValues.forEach((function(originalValue,originalKey){originalValuesOrder.push({index:originalKey,value:originalValue})})),originalValuesOrder.sort((function(itemA,itemB){let valueA=self.isString(itemA.value)?self.getToString(itemA.value).toLocaleLowerCase():itemA.value,valueB=self.isString(itemB.value)?self.getToString(itemB.value).toLocaleLowerCase():itemB.value;return valueA>valueB?1:valueA<valueB?-1:0})),"desc"===order.toLocaleLowerCase().trim()&&(originalValuesOrder=originalValuesOrder.reverse()),originalValuesOrder.forEach((function(item){item.value&&self.isTypeOf(item.value,"object")&&recurssive&&(item.value=self.sort(item.value,order,recurssive)),valuesOrdered[originalKeys[item.index]]=item.value})),valuesOrdered):value},numberFormat:function(number,decimals,decPoint,thousandsPoint){let splitNum=null;if(null==number||!isFinite(number))return null;if(!decimals){var len=number.toString().split(".").length;decimals=len>1?len:0}return decPoint||(decPoint="."),thousandsPoint||(thousandsPoint=","),splitNum=(number=(number=parseFloat(number).toFixed(decimals)).replace(".",decPoint)).split(decPoint),splitNum[0]=splitNum[0].replace(/\B(?=(\d{3})+(?!\d))/g,thousandsPoint),number=splitNum.join(decPoint)},vsPrintf:function(mask="%s",value=null){let self=this,length=(mask.match(/\%s/g)||[]).length,values=this.isObject(value,!1)?this.getValues(value):value.split(""),first=null,masked=mask;for(;length>0;)length--,first=values.shift(),masked=masked.replace(/\%s/,first);return masked},format:function(mask,string,complete=null,leftOrRight=1){let self=this;if(self.isNotEmpty(string)){complete=self.isNotEmpty(complete)?complete:"#";let strLength=self.getLength(string),maskLength=(mask.match(/\#/g)||[]).length,maxStrLength=maskLength>strLength?maskLength:strLength,maxMaskLength=strLength>maskLength?strLength:maskLength,maskPrint=leftOrRight?mask.padStart(maxMaskLength,"#"):mask.padEnd(maxMaskLength,"#"),stringPrint=leftOrRight?string.padStart(maxStrLength,complete):mask.padEnd(maxStrLength,complete);return maskPrint=maskPrint.replace(/\#/g,"%s"),self.vsPrintf(maskPrint,stringPrint)}return string},onlyNumbers:function(value=null){let self=this;return self.isNotObject(value,!1)&&self.getLength(value)?self.getToString(value).replace(/[^0-9]/g,""):value},toFloat:function(value=null){let self=this,newValue=null;return self.isNotObject(value,!1)&&self.getLength(value)?(newValue=self.getToString(value).match(/\-?\d*(?:\.\d+)?/g,""),newValue=newValue?newValue.filter((v,i)=>"number"==typeof i&&v.length):[],newValue.shift()):value},floatToMoneyBrasil:function(value=null,decimal=2){let self=this,newValueReal=null,newValueCases=null,firstValueMatch=null,regexReal=/^-?(\d+\.\d{3,3}\,\d{1,2})$/g,regexMatchs=/^-?((\d+\.\d+)|(\d+\,\d+)|(\d+))$/g;if(self.isNotObject(value,!1)&&self.getLength(value)){if(newValueReal=self.getToString(value).replace(/[^0-9\.\,\-]/g,""),newValueReal=self.getToString(newValueReal).match(regexReal),newValueReal=newValueReal?newValueReal.filter((v,i)=>"number"==typeof i&&v.length):[],self.getLength(newValueReal)>0)return firstValueMatch=newValueReal.shift(),firstValueMatch=firstValueMatch.replace(".",""),firstValueMatch=firstValueMatch.replace(",","."),self.numberFormat(firstValueMatch,decimal,",",".");if(newValueCases=self.getToString(value).replace(/[^0-9\.\,\-]/g,""),newValueCases=self.getToString(newValueCases).match(regexMatchs),newValueCases=newValueCases?newValueCases.filter((v,i)=>"number"==typeof i&&v.length):[],self.getLength(newValueCases)>0)return firstValueMatch=newValueCases.shift(),firstValueMatch=firstValueMatch.replace(",","."),self.numberFormat(firstValueMatch,decimal,",",".")}return null}}}}